net {
  type = mainnet
  # type = testnet
}

storage {
  # Directory for storing persistent data
  db.version = 2,
  db.engine = "LEVELDB",
  db.sync = false,
  db.directory = "database",
  index.directory = "index",
  transHistory.switch = "on",

  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.

  # Otherwise, db configs will remain defualt and data will be stored in
  # the path of "output-directory" or which is set by "-d" ("--output-directory").

  # Attention: name is a required field that must be set !!!
  properties = [
    # {
    #   name = "account",
    #   path = "storage_directory_test",
    #   createIfMissing = true,
    #   paranoidChecks = true,
    #   verifyChecksums = true,
    #       compressionType = 1,        // compressed with snappy
    #       blockSize = 4096,           // 4  KB =         4 * 1024 B
    #       writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    #       cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    #       maxOpenFiles = 100
    #     },
    # {
    #   name = "account-index",
    #   path = "storage_directory_test",
    #   createIfMissing = true,
    #   paranoidChecks = true,
    #   verifyChecksums = true,
    #       compressionType = 1,        // compressed with snappy
    #       blockSize = 4096,           // 4  KB =         4 * 1024 B
    #       writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    #       cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    #       maxOpenFiles = 100
    #     },
  ]

  needToUpdateAsset = true

  //dbsettings is needed when using rocksdb as the storage implement (db.version=2 and db.engine="ROCKSDB").
  //we'd strongly recommend that do not modify it unless you know every item's meaning clearly.
  dbSettings = {
    levelNumber = 7
    //compactThreads = 32
    blocksize = 64  // n * KB
    maxBytesForLevelBase = 256  // n * MB
    maxBytesForLevelMultiplier = 10
    level0FileNumCompactionTrigger = 4
    targetFileSizeBase = 256  // n * MB
    targetFileSizeMultiplier = 1
  }

  //backup settings when using rocks db as the storage implement (db.version=2 and db.engine="ROCKSDB").
  //if you want to use the backup plugin, please confirm set the db.version=2 and db.engine="ROCKSDB" above.
  backup = {
    enable = false  // indicate whether enable the backup plugin
    propPath = "prop.properties" // record which bak directory is valid
    bak1path = "bak1/database" // you must set two backup directories to prevent application halt unexpected(e.g. kill -9).
    bak2path = "bak2/database"
    frequency = 10000   // indicate backup db once every 10000 blocks processed.
  }
}

node.discovery = {
  enable = true
  persist = true
  bind.ip = ""
  external.ip = null
}

node.backup {
  port = 10001

  # my priority, each member should use different priority
  priority = 8

  # peer's ip list, can't contain mine
  members = [
    # "ip",
    # "ip"
  ]
}

node {
  # trust node for solidity node
  # trustNode = "ip:port"
  # trustNode = "127.0.0.1:50051"

  # expose extension api to public or not
  walletExtensionApi = true

  listen.port = 18889

  connection.timeout = 2

  tcpNettyWorkThreadNum = 0

  udpNettyWorkThreadNum = 1

  # Number of validate sign thread, default availableProcessors / 2
  # validateSignThreadNum = 16

  connectFactor = 0.3
  activeConnectFactor = 0.1

  maxActiveNodes = 30

  maxActiveNodesWithSameIp = 2

  maxHttpConnectNumber = 50

  minParticipationRate = 15

  # check the peer data transfer ,disconnect factor
  disconnectNumberFactor = 0.4
  maxConnectNumberFactor = 0.8
  receiveTcpMinDataLength = 2048
  isOpenFullTcpDisconnect = true

  p2p {
    version = 9981 # 11111: mainnet; 20180622: testnet
  }

  active = [
    # Active establish connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  passive = [
    # Passive accept connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  fastForward = [
   
  ]

  http {
    fullNodePort = 8090
    solidityPort = 8091
  }

  rpc {
    port = 50041
    #solidityPort = 50061
    # Number of gRPC thread, default availableProcessors / 2
    # thread = 16

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 1MB
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum message size allowed to be received on the server, default 4MB
    # maxMessageSize =

    # The maximum size of header list allowed to be received, default 8192
    # maxHeaderListSize =

    # Transactions can only be broadcast if the number of effective connections is reached.
    minEffectiveConnection = 1
  }

  # number of solidity thread in the FullNode.
  # If accessing solidity rpc and http interface timeout, could increase the number of threads,
  # The default value is the number of cpu cores of the machine.
  #solidity.threads = 8

  # Limits the maximum percentage (default 75%) of producing block interval
  # to provide sufficient time to perform other operations e.g. broadcast block
  # blockProducedTimeOut = 75

  # Limits the maximum number (default 700) of transaction from network layer
  # netMaxTrxPerSecond = 700
}



seed.node = {
  # List of the seed nodes
  # Seed nodes are stable full nodes
  # example:
  # ip.list = [
  #   "ip:port",
  #   "ip:port"
  # ]
  ip.list = [
	"54.183.253.215:20000",
	"15.164.236.35:20000",
	"35.183.76.95:20000",
	"52.77.221.86:20000",
	"35.177.151.128:20000",
	"18.231.172.217:20000",
	"3.231.205.155:20000",
	"13.235.210.26:20000",
	"52.185.154.241:20000",
	"52.231.162.20:20000",
	"52.163.96.114:20000",
	"20.37.45.192:20000",
	"168.62.192.73:20000",
	"13.88.230.177:20000",
	"23.97.102.7:20000",
	"20.188.34.150:20000",
	"47.97.158.124:20000",
	"47.74.86.195:20000",
	"47.108.67.250:20000",
	"8.208.77.142:20000",
	"198.11.174.227:20000",
	"47.254.236.145:20000",
	"39.108.250.217:20000"
  ]
}

genesis.block = {
  # Reserve balance
  assets = [
    {
      accountName = "Zion0"
      accountType = "AssetIssue"
      address = "TRQZPkbmjthGU6SP7Zb7rszHR69dbLZsUP"
      balance = "99000000000000000"
    },
	{
      accountName = "Zion1"
      accountType = "AssetIssue"
      address = "TM5PLxhyBgpfhmDns2S94x2pogV296nJEg"
      balance = "99000000000000000"
    },
	{
      accountName = "Zion2"
      accountType = "AssetIssue"
      address = "TVXfqmyhww74TJ5iZoQ7hGSEL5mpf4VEgu"
      balance = "99000000000000000"
    },
	{
      accountName = "Zion3"
      accountType = "AssetIssue"
      address = "TM5xvAXWsjMSbi4f9JKduct1Ag6RgjDuRK"
      balance = "99000000000000000"
    },
	{
      accountName = "Zion4"
      accountType = "AssetIssue"
      address = "TRkKoZCRY13vGWmXWnJmfQwjXRPSCANqbb"
      balance = "99000000000000000"
    },
	{
      accountName = "Zion5"
      accountType = "AssetIssue"
      address = "TFmHq4GXx7WJpgpz4gseAgknPtG8jhk3gL"
      balance = "99000000000000000"
    },
    {
      accountName = "Yun"
      accountType = "AssetIssue"
      address = "TXmVpin5vq5gdZsciyyjdZgKRUju4st1wM"
      balance = "0"
    },
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      address = "TLsV52sRDL79HXGGm9yzwKibb6BeruhUzy"
      balance = "-9223372036854775808"
    }
  ]

  witnesses = [
    {
      address: TKg4afDSn3D7tBop9avrQxfurCzXkujLij,
      url = "http://GR1.com",
      voteCount = 100000027
    },
	{
      address: TTZzDUzTFETnMLdoGdpZkRYVRWSn5vUw8i,
      url = "http://GR2.com",
      voteCount = 100000026
    },
    {
      address: TJhsryfYSHpp5SfsypQzrQaUiF2NfYpveg,
      url = "http://GR3.com",
      voteCount = 100000025
    },
    {
      address: TLj11WCoB5nZJqhjhhr3uckkCSonaMv22X,
      url = "http://GR4.com",
      voteCount = 100000024
    },
    {
      address: TQAnKJUJkKoQ1CG7k7Q85vJobsuhDA6XGa,
      url = "http://GR5.com",
      voteCount = 100000023
    },
    {
      address: TRQZPkbmjthGU6SP7Zb7rszHR69dbLZsUP,
      url = "http://GR6.com",
      voteCount = 100000022
    },
    {
      address: THVjBqTq1djBaxwu5yx5rCGm2vWEp93Mwy,
      url = "http://GR7.com",
      voteCount = 100000021
    },
    {
      address: TVXfqmyhww74TJ5iZoQ7hGSEL5mpf4VEgu,
      url = "http://GR8.com",
      voteCount = 100000020
    },
    {
      address: TM5PLxhyBgpfhmDns2S94x2pogV296nJEg,
      url = "http://GR9.com",
      voteCount = 100000019
    },
	{
      address: TF6ZGvm9sWXQ8Uhjx11ztRWc14E4Ja1qLR,
      url = "http://GR10.com",
      voteCount = 100000018
    },
    {
      address: THyNgftyj6yNbyw2NwZ799UeWwpHz1qs8k,
      url = "http://GR11.com",
      voteCount = 100000017
    },
    {
      address: TCFRKWfkbtm56a4pjQD5CXphe6E5xXQgnY,
      url = "http://GR12.com",
      voteCount = 100000016
    },
	{
      address: TT41eLNnkxqMpBTzkyMfEKy3XgmzALyRLo,
      url = "http://GR13.com",
      voteCount = 100000015
    },
    {
      address: TA56WBDbNavpxUAHhBMjadDwPnG7SiWenQ,
      url = "http://GR14.com",
      voteCount = 100000014
    },
    {
      address: TMxQ12LAbVDn2ywqAP8tSAoDVom3eQVgwU,
      url = "http://GR15.com",
      voteCount = 100000013
    },
    {
      address: TTsJBqxPUBbBojHHBLCg6udsxBoBmbSEBq,
      url = "http://GR16.com",
      voteCount = 100000012
    },
    {
      address: TT8nG3rmbQf6v2bThY6E4HVuosnvSMpZtZ,
      url = "http://GR17.com",
      voteCount = 100000011
    },
    {
      address: TRZM5yXhR45KCidaWG3NDHmephQYkdks4d,
      url = "http://GR18.com",
      voteCount = 100000010
    },
    {
      address: TVNjz1kce891Zuy5uLRhzNodvep2eiH6WF,
      url = "http://GR19.com",
      voteCount = 100000009
    },
    {
      address: TTDY2YmNhdNbqzF4i52J9MV43P8AH5RGSq,
      url = "http://GR20.com",
      voteCount = 100000008
    },
    {
      address: TPPuNDdWKoiQFvdWz7A2e4nrGbg7Z8rjTs,
      url = "http://GR21.com",
      voteCount = 100000007
    },
    {
      address: TF4SCiyNpg3xFr7VTEFrXhGewTpkqXUq3B,
      url = "http://GR22.com",
      voteCount = 100000006
    },
    {
      address: TWpPtxWeicbAkQoREpzrgWRc73QLJEWdz8,
      url = "http://GR23.com",
      voteCount = 100000005
    }
  ]
  timestamp = "0" #2017-8-26 12:00:00

  parentHash = "0xe58f33f9baf9305dc6f82b9f1934ea8f0ade2defb951258d50167028c780351f"
}

// Optional.The default is empty.
// It is used when the witness account has set the witnessPermission.
// When it is not empty, the localWitnessAccountAddress represents the address of the witness account,
// and the localwitness is configured with the private key of the witnessPermissionAddress in the witness account.
// When it is empty,the localwitness is configured with the private key of the witness account.

//localWitnessAccountAddress =

localwitness = [
]

#localwitnesskeystore = [
#  "localwitnesskeystore.json"
#]

block = {
  needSyncCheck = true   //first node = false; other= true
  maintenanceTimeInterval = 43200000
  proposalExpireTime = 43200000 //  12 hours:4320000, 3 day: 259200000(ms)
}

# Transaction reference block, default is "head", configure to "solid" can avoid TaPos error
# trx.reference.block = "head" // head;solid;

# This property sets the number of milliseconds after the creation of the transaction that is expired, default value is  60000.
# trx.expiration.timeInMilliseconds = 60000

vm = {
  supportConstant = true
  minTimeRatio = 0.0
  maxTimeRatio = 5.0
  saveInternalTx = true

  # In rare cases, transactions that will be within the specified maximum execution time (default 10(ms)) are re-executed and packaged
  # longRunningTime = 10
}

committee = {
  allowCreationOfContracts = 1  //mainnet:0 (reset by committee),test:1
  allowAdaptiveEnergy = 1  //mainnet:0 (reset by committee),test:1
  allowTvmTransferTrc10 = 1
  allowSameTokenName = 1
}

log.level = {
   root = "INFO" // TRACE;DEBUG;INFO;WARN;ERROR
}

event.subscribe = {
    native = {
      useNativeQueue = true // if true, use native message queue, else use event plugin.
      bindport = 5555 // bind port
      sendqueuelength = 1000 //max length of send queue
    }

    path = "" // absolute path of plugin
    server = "" // target server address to receive event triggers
    dbconfig="" // dbname|username|password
    contractParse = true,
    topics = [
        {
          triggerName = "block" // block trigger, the value can't be modified
          enable = true
          topic = "block" // plugin topic, the value could be modified
        },
        {
          triggerName = "transaction"
          enable = true
          topic = "transaction"
        },
        {
          triggerName = "contractevent"
          enable = true
          topic = "contractevent"
        },
        {
          triggerName = "contractlog"
          enable = true
          topic = "contractlog"
        }
    ]

    filter = {
       fromblock = "" // the value could be "", "earliest" or a specified block number as the beginning of the queried range
       toblock = "" // the value could be "", "latest" or a specified block number as end of the queried range
       contractAddress = [
           "" // contract address you want to subscribe, if it's set to "", you will receive contract logs/events with any contract address.
       ]

       contractTopic = [
           "" // contract topic you want to subscribe, if it's set to "", you will receive contract logs/events with any contract topic.
       ]
    }
}
